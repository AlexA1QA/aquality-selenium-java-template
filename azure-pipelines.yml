trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  webDriverVersion: '80.0.3987.106'

steps:
  - task: Bash@3
    displayName: 'Install Allure CommandLine'
    inputs:
      targetType: 'inline'
      script: |
        curl https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.3/allure-commandline-2.13.3.zip -o /opt/allure-commandline.zip
        unzip /opt/allure-commandline.zip -d /opt/allure-commandline

  - task: SonarCloudPrepare@1
    displayName: 'Prepare SonarCloud analysis'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'aqualityautomation'
      scannerMode: 'CLI'
      configMode: 'file'
      extraProperties: |
        sonar.coverage.exclusions=**/**

  - task: Maven@3
    displayName: 'Build project'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'clean'

  - task: SonarCloudAnalyze@1
    displayName: 'Run SonarCloud code analysis'
    continueOnError: true

  - task: SonarCloudPublish@1
    displayName: 'Publish SonarCloud quality gate results'
    continueOnError: true
    inputs:
      pollingTimeoutSec: '300'

  - task: Maven@3
    displayName: 'Run tests'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'test'

  - task: Bash@3
    displayName: 'Generate Allure report'
    inputs:
      targetType: 'inline'
      script: |
        export PATH="$PATH:/opt/allure-commandline/allure-2.13.3/bin"
        allure --version
        allure generate aquality-selenium-template-cucumber/target/allure-results -o aquality-selenium-template-cucumber/target/allure-report
    condition: succeededOrFailed()

  - task: CopyFiles@2
    displayName: 'Copy Allure report'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        aquality-selenium-template-cucumber/target/allure-report
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish copied artifacts'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/aquality-selenium-template-cucumber/target/allure-report'
      artifactName: 'allure'
    condition: succeededOrFailed()